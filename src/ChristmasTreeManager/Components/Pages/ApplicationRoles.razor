@page "/application-roles"
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject DialogService DialogService
@inject ContextMenuService ContextMenuService
@inject TooltipService TooltipService
@inject NotificationService NotificationService
@attribute [Authorize]

<RadzenStack>
    <RadzenRow AlignItems="AlignItems.Center">
        <RadzenColumn Size="12" SizeMD="6">
            <RadzenText Text="Rolle" TextStyle="TextStyle.H3" TagName="TagName.H1" style="margin: 0" />
        </RadzenColumn>
        <RadzenColumn Size="12" SizeMD="6">
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End" Gap="0.5rem">
                <RadzenButton Icon="add_circle_outline" Text="Add" Click="@AddClick" Variant="Variant.Flat" />
            </RadzenStack>
        </RadzenColumn>
    </RadzenRow>
    <RadzenRow>
        <RadzenColumn SizeMD="12">
            <RadzenAlert Size="AlertSize.Large" Shade="Shade.Light" AlertStyle="AlertStyle.Danger" Variant="Variant.Flat" Title="Cannot delete role" Visible="@errorVisible">@error</RadzenAlert>
                <RadzenDataGrid @ref="dataGrid" AllowFiltering="true" AllowPaging="true" ShowPagingSummary="true" PageSizeOptions=@(new int[]{10, 50, 100, 500}) PageSize=50 AllowSorting="true" Data="@data" TItem="ApplicationRole">
                    <Columns>
                        <RadzenDataGridColumn TItem="ApplicationRole" Property="Name" Title="Name" />
                        <RadzenDataGridColumn TItem="ApplicationRole" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="70px">
                            <Template Context="role">
                                <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="close" Size="ButtonSize.Small"
                                              Variant="Variant.Flat" Shade="Shade.Lighter" Click="@(() => DeleteClick(role))" @onclick:stopPropagation="true" />
                            </Template>
                        </RadzenDataGridColumn>
                    </Columns>
                </RadzenDataGrid>
            </RadzenColumn>
        </RadzenRow>
    </RadzenStack>

    @code {
    [Inject]
    protected SecurityService Security { get; set; } = null!;

    protected string error = string.Empty;
    protected bool errorVisible;
    protected IEnumerable<ApplicationRole> data = null!;
    protected RadzenDataGrid<ApplicationRole> dataGrid = null!;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        data = await Security.GetRoles();
    }

    protected async Task AddClick()
    {
        await DialogService.OpenAsync<AddApplicationRole>("Neue Rolle");
        await dataGrid.Reload();
    }

    protected async Task DeleteClick(ApplicationRole role)
    {
        try
        {
            if (await DialogService.Confirm("Sind Sie sicher, dass Sie diese Rolle l&ouml;schen m&ouml;chten?") == true)
            {
                await Security.DeleteRole($"{role.Id}");
            }
        }
        catch (Exception ex)
        {
            errorVisible = true;
            error = ex.Message;
        }
    }
}
