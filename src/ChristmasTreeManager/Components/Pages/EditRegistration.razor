@page "/edit-registration"@attribute [Authorize]@inject IJSRuntime JSRuntime@inject NavigationManager NavigationManager@inject DialogService DialogService@inject ContextMenuService ContextMenuService@inject TooltipService TooltipService@inject NotificationService NotificationService@inject ApplicationDbService ApplicationDbService<PageTitle>Anmeldung</PageTitle><RadzenRow>    <RadzenColumn SizeMD="9">        <RadzenLabel style="font-weight: bold" Text="Item no longer available." Visible="@(!canEdit)" />    </RadzenColumn>    <RadzenColumn SizeMD="3">        <RadzenButton ButtonStyle="ButtonStyle.Secondary" style="margin-bottom: 20px" Text="Close" Visible="@(!canEdit)" Click="@CancelButtonClick" />    </RadzenColumn></RadzenRow><RadzenRow>    <RadzenColumn SizeMD="9">        <RadzenLabel style="font-weight: bold" Text="Another user has made conflicting changes to one or more of the fields you have modified. Please reload." Visible="@hasChanges" />    </RadzenColumn>    <RadzenColumn SizeMD="3">        <RadzenButton ButtonStyle="ButtonStyle.Secondary" Icon="autorenew" style="margin-bottom: 20px" Text="Reload" Visible="@hasChanges" Click="@ReloadButtonClick" />    </RadzenColumn></RadzenRow><RadzenColumn SizeMD=12>    <RadzenAlert Shade="Shade.Lighter" Variant="Variant.Flat" Size="AlertSize.Small" AlertStyle="AlertStyle.Danger" Visible="@errorVisible">Cannot save Registration</RadzenAlert>    <RadzenTemplateForm TItem="Registration" Data="@registration" Visible="@(registration != null && canEdit)" Submit="@FormSubmit">        <RadzenRow style="margin-bottom: 1rem">            <RadzenColumn SizeMD="3">                <RadzenLabel Text="Id" Component="Id" style="width: 100%" />            </RadzenColumn>            <RadzenColumn SizeMD="9">                <RadzenTextBox style="display: block; width: 100%" @bind-Value="@registration!.Id" Name="Id" Disabled=true />                <RadzenRequiredValidator Component="Id" Text="Id is required" />            </RadzenColumn>        </RadzenRow>        <RadzenRow style="margin-bottom: 1rem">            <RadzenColumn SizeMD="3">                <RadzenLabel Text="Anmeldedatum" Component="RegistrationDate" style="width: 100%" />            </RadzenColumn>            <RadzenColumn SizeMD="9">                <RadzenDatePicker style="display: block; width: 100%" @bind-Value="@registration!.RegistrationDate" Name="RegistrationDate" DateFormat="dd.MM.yyyy" />                <RadzenRequiredValidator Component="RegistrationDate" Text="RegistrationDate is required" />            </RadzenColumn>        </RadzenRow>        <RadzenRow style="margin-bottom: 1rem">            <RadzenColumn SizeMD="3">                <RadzenLabel Text="Annahmestelle" Component="RegistrationPoint" style="width: 100%" />            </RadzenColumn>            <RadzenColumn SizeMD="9">                <RadzenDropDownDataGrid Data="@registrationPointsForRegistrationPointId" TextProperty="Name" ValueProperty="Id" AllowClear=true Placeholder="Choose RegistrationPoint" style="display: block; width: 100%" @bind-Value="@registration!.RegistrationPointId" Name="RegistrationPointId" />            </RadzenColumn>        </RadzenRow>        <RadzenRow style="margin-bottom: 1rem">            <RadzenColumn SizeMD="3">                <RadzenLabel Text="Name" Component="Customer" style="width: 100%" />            </RadzenColumn>            <RadzenColumn SizeMD="9">                <RadzenTextBox style="display: block; width: 100%" @bind-Value="@registration!.Customer" Name="Customer" />                <RadzenRequiredValidator Component="Customer" Text="Customer is required" />            </RadzenColumn>        </RadzenRow>        <RadzenRow style="margin-bottom: 1rem">            <RadzenColumn SizeMD="3">                <RadzenLabel Text="Stra&szlig;e" Component="Street" style="width: 100%" />            </RadzenColumn>            <RadzenColumn SizeMD="9">                <RadzenDropDownDataGrid Data="@streetsForStreetId" TextProperty="DisplayName" ValueProperty="Id" AllowClear=true Placeholder="Choose Street" style="display: block; width: 100%" @bind-Value="@registration!.StreetId" Name="StreetId" />            </RadzenColumn>        </RadzenRow>        <RadzenRow style="margin-bottom: 1rem">            <RadzenColumn SizeMD="3">                <RadzenLabel Text="Hausnummer" Component="Housenumber" style="width: 100%" />            </RadzenColumn>            <RadzenColumn SizeMD="9">                <RadzenNumeric style="display: block; width: 100%" @bind-Value="@registration!.Housenumber" Name="Housenumber" />                <RadzenRequiredValidator Component="Housenumber" Text="Housenumber is required" />            </RadzenColumn>        </RadzenRow>        <RadzenRow style="margin-bottom: 1rem">            <RadzenColumn SizeMD="3">                <RadzenLabel Text="Telefon" Component="Phone" style="width: 100%" />            </RadzenColumn>            <RadzenColumn SizeMD="9">                <RadzenTextBox style="display: block; width: 100%" @bind-Value="@registration!.Phone" Name="Phone" />                <RadzenRequiredValidator Component="Phone" Text="Phone is required" />            </RadzenColumn>        </RadzenRow>        <RadzenRow style="margin-bottom: 1rem">            <RadzenColumn SizeMD="3">                <RadzenLabel Text="E-Mail" Component="Mail" style="width: 100%" />            </RadzenColumn>            <RadzenColumn SizeMD="9">                <RadzenTextBox style="display: block; width: 100%" @bind-Value="@registration!.Mail" Name="Mail" />                <RadzenRequiredValidator Component="Mail" Text="Mail is required" />            </RadzenColumn>        </RadzenRow>        <RadzenRow style="margin-bottom: 1rem">            <RadzenColumn SizeMD="3">                <RadzenLabel Text="Anzahl" Component="TreeCount" style="width: 100%" />            </RadzenColumn>            <RadzenColumn SizeMD="9">                <RadzenNumeric style="display: block; width: 100%" @bind-Value="@registration!.TreeCount" Name="TreeCount" />                <RadzenRequiredValidator Component="TreeCount" Text="TreeCount is required" />            </RadzenColumn>        </RadzenRow>        <RadzenRow style="margin-bottom: 1rem">            <RadzenColumn SizeMD="3">                <RadzenLabel Text="Betrag" Component="Donation" style="width: 100%" />            </RadzenColumn>            <RadzenColumn SizeMD="9">                <RadzenNumeric style="display: block; width: 100%" @bind-Value="@registration!.Donation" Name="Donation" />                <RadzenRequiredValidator Component="Donation" Text="Donation is required" />            </RadzenColumn>        </RadzenRow>        <RadzenRow style="margin-bottom: 1rem">            <RadzenColumn SizeMD="3">                <RadzenLabel Text="Kommentar" Component="Comment" style="width: 100%" />            </RadzenColumn>            <RadzenColumn SizeMD="9">                <RadzenTextBox style="display: block; width: 100%" @bind-Value="@registration!.Comment" Name="Comment" />                <RadzenRequiredValidator Component="Comment" Text="Comment is required" />            </RadzenColumn>        </RadzenRow>        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End" Gap="0.5rem">            <RadzenButton ButtonStyle="ButtonStyle.Primary" ButtonType="ButtonType.Submit" Icon="save" Text="Speichern" Variant="Variant.Flat" />            <RadzenButton ButtonStyle="ButtonStyle.Light" Text="Abbruch" Variant="Variant.Flat" Click="@CancelButtonClick" />        </RadzenStack>    </RadzenTemplateForm></RadzenColumn>@code {    [Inject]
    protected SecurityService Security { get; set; } = null!;

    [Parameter]
    public required string Id { get; set; }

    protected bool hasChanges = false;
    protected bool canEdit = true;
    protected bool errorVisible;
    protected Registration registration = null!;
    protected IEnumerable<RegistrationPoint> registrationPointsForRegistrationPointId = null!;
    protected IEnumerable<Street> streetsForStreetId = null!;

    protected override async Task OnInitializedAsync()
    {
        registration = await ApplicationDbService.GetRegistrationById(Id) ?? throw new InvalidOperationException("Failed to query Entity!");
        registrationPointsForRegistrationPointId = await ApplicationDbService.GetRegistrationPoints();
        streetsForStreetId = await ApplicationDbService.GetStreets();
    }

    protected async Task FormSubmit()
    {
        try
        {
            await ApplicationDbService.UpdateRegistration(Security.UserName, Id, registration);
            DialogService.Close(registration);
        }
        catch (Exception ex)
        {
            hasChanges = ex is Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException;
            canEdit = !(ex is Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException);
            errorVisible = true;
        }
    }

    protected async Task CancelButtonClick(MouseEventArgs args)
    {
        DialogService.Close(null);
    }

    protected async Task ReloadButtonClick(MouseEventArgs args)
    {
        ApplicationDbService.Reset();
        hasChanges = false;
        canEdit = true;
        registration = await ApplicationDbService.GetRegistrationById(Id) ?? throw new InvalidOperationException("Failed to query Entity!");
    }}